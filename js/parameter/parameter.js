function addUnit(){const e=$(this).closest(".last-unit"),n=e.prev().clone();return n.find("select").val(0),n.find("select").attr("id",""),e.before(n),resetOption($(this).closest(".units")),!1}function changeUnit(){allowTreeView=!0;let e=$(this).find("option:selected").html();console.log(`Change unit: ${e}`);let n=!1;for(let t=0;t<DATA.length;t++)if(null==DATA[t][e]){console.log(t),n=!0;break}return n&&alert(`WARNING! 表中<${e}>列存在空值!`),!1}function deleteUnit(){const e=$(this).closest(".unit");0!=+e.find("select").val()&&(allowTreeView=!0);const n=e.closest(".units"),t=n.data("type");return 1==n.children(".unit").length?(alert("当前选择框为最后一个，不能删除！"),!1):(e.remove(),showCodes(t),resetOption(n),!1)}function resetOption(e){let n=[];[...e.find("option:selected")].forEach(e=>{n.push($(e).val())}),[...e.find(".unit")].forEach(e=>{let t=$(e).find("option:selected").val();show($(e).find("option")),n.forEach(n=>{0!=n&&(n==t?show($(e).find(`option[value="${n}"]`)):hide($(e).find(`option[value="${n}"]`)))})})}function selectChange(){const e=$(this);let n=e.closest(".units").data("type"),t=e.find("option:selected").val(),i=e.closest(".unit").index();return showCodes(n),adjustOptionChange(e.closest(".units"),t,i),!1}function adjustOptionChange(e,n,t){0!=+n?e.find(".unit").each((e,i)=>{e!=t&&hide($(i).find(`option[value="${n}"]`))}):resetOption(e)}function inputChange(){return showCodes($(this).data("type")),!1}function inputFocus(){$(this).bind("keydown",function(e){13==e.which&&(e.preventDefault(),$(this).blur())})}function switchChange(){return showCodes($(this).data("type")),!1}$(function(){delegate($("#parameterZone"),[{target:".add-unit",event:"click",handler:addUnit},{target:".delete-unit",event:"click",handler:deleteUnit},{target:"#parameter-analysisUnit select",event:"change",handler:changeUnit}])}),$(function(){delegate($("#parameterZone"),[{target:"select",event:"change",handler:selectChange},{target:'input[type="text"]',event:"change",handler:inputChange},{target:'input[type="text"]',event:"focus",handler:inputFocus},{target:'input[type="checkbox"]',event:"change",handler:switchChange}])});const initSelect=once(function(){const e=$("#analysisUnit-select"),n=$("#analysisWords-select");let t=[];if((e=>isundef(e)||0==e.length)(DATA)){t=ENCODE[0];let e=JSON.parse(JSON.stringify(t));encodeConfig.dimensions.forEach(n=>{delete e[n]}),t=e}else t=TARGET[0];let i='<option value="0">请选择</option>';Object.keys(t).forEach((e,n)=>{"content"!=e.toLowerCase()&&(i+=`<option value="${n+1}">${e}</option>`)}),e.html(i),n.html(i)});function getParameter(e){let n=[];switch(e){case"analysisUnit":return[...$("#parameter-analysisUnit").find("select")].forEach(e=>{n.push(`${$(e).find("option:selected").html()}`)}),n.filter(e=>"请选择"!==e);case"analysisWords":return[...$("#parameter-analysisWords").find("select")].forEach(e=>{n.push(`${$(e).find("option:selected").html()}`)}),n.filter(e=>"请选择"!==e);case"windowSize":return $("#parameter-windowSize input").val();case"encodeDimensions":return[...$("#parameter-encodeDimensions").find("input")].forEach(e=>{$(e).prop("checked")&&n.push(`${$(e).next().html()}`)}),n;default:console.error(`WRONG type:<${e}>!`)}}function gatherParameter(){return{units:getParameter("analysisUnit"),conversation:getParameter("analysisWords"),codecols:getParameter("encodeDimensions"),windowsize:getParameter("windowSize")}}function showCodes(e){const n=$(`#rcode-${e}`);let t="",i=getParameter(e);switch(e){case"analysisUnit":if(!i.length)return void hide(n);t+="#确定分析单位是每个班级每个小组的每个学生\n"+`units = <b>STEM.data[,c(${decorateValues(i).join(",")})]</b>\n`;break;case"analysisWords":if(!i.length)return void hide(n);t+="#确定会话是每个班每个小组的每次讨论活动\n"+`conversation = <b>as.data.frame(STEM.data[,c(${decorateValues(i).join(",")})])</b>\n`;break;case"windowSize":t+=`#计算累计邻接向量，定义节的大小是<b>${i}</b>行\n`+"accum = ena.accumulate.data(\n   units = units,\n   conversation = conversation,\n   codes = codes,\n"+`   <b>window.size.back = ${i}</b>\n`+")";break;case"encodeDimensions":t+="#确定讨论内容的编码方案，包括的编码有：学情分析能力、学习目标设计能力、学习情境设计能力、知识内容设计能力、\n学习活动设计能力、技术整合能力、学习评价设计能力\n<b>codeCols = c(\n"+`   ${decorateValues(i).join(",")}\n`+")</b>\ncodes = STEM.data[,codeCols]\n";break;default:console.error(`WRONG type:<${e}>!`)}n.html(t),show(n)}function decorateValues(e){return Array.isArray(e)?e.map(e=>`"${e}"`):`"${e}"`}function initShowCodes(){if(initShowCodes.init)return;const e=$("#parameter-dimensions");let n="";encodeConfig.dimensions.forEach(e=>{n+=`\n        <li class="list-group-item">\n            <div class="checkbox checkbox-slider--b">\n                <label><input type="checkbox" data-type='encodeDimensions' checked>\n                    <span>${e}</span></label>\n            </div>\n        </li>`.trim()}),e.html(n),$("#parameter-analysisUnit").find("option:selected").length&&showCodes("analysisUnit"),$("#parameter-analysisWords").find("option:selected").length&&showCodes("analysisWords");let t=$("#parameter-windowSize input").val();t&&showCodes("windowSize",t),$("#parameter-encodeDimensions").find("input:checked").length&&showCodes("encodeDimensions"),initShowCodes.init=!0}