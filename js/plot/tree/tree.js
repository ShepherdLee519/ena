const getTreedata=function(){let e,t,n=[];function l(t,a,o){o<e.length&&(t.next=function(e,t){let l=new Set;n.forEach(n=>{(function(e,t){let n=!0;for(let l=0;l<e.length;l++)if(t[e[l].type]!=e[l].value){n=!1;break}return n})(e,n)&&l.add(n[t])});let a=[];return[...l].sort().forEach(e=>{isundef(e)||a.push({type:t,value:e,next:[]})}),a}(a,e[o]),t.next.forEach(e=>{a.push({type:e.type,value:e.value}),l(e,a,o+1),a.pop()}))}return function(a){return t=function(e){const t=[],l=e[0],a=new Set;let o;return ENCODE.forEach(t=>{o={},a.add(t[l]),e.forEach(e=>{o[e]=t[e]}),n.push(o)}),[...a].sort().forEach(e=>{t.push({type:l,value:e,next:[]})}),t}(e=a),e.length>1&&t.forEach(e=>{l(e,[{type:e.type,value:e.value}],1)}),t}}();function getTreeNodeData(e){const t={floor:-1,type:"",value:"",check:{net:!1,mean:!1,center:!1},color:""},n=$("#treeZone").find("li").eq(e);t.floor=+n.data("floor"),t.type=n.data("type"),t.value=n.data("value"),["net","mean","center"].forEach(e=>{t.check[e]=n.find(`span.${glyDict[e]}`).length>0});const l=n.find(".evo-colorind");return t.color=l.data("color"),t}function getAllTreeNodesData(){const e=[],t=$("#treeZone").find("li").length;for(let n=0;n<t;n++)e.push(getTreeNodeData(n));return e}const glyDict={no_net:"glyphicon-unchecked",net:"glyphicon-check",no_mean:"glyphicon-ban-circle",mean:"glyphicon-record",no_center:"glyphicon-eye-close",center:"glyphicon-eye-open"};let allowTreeView=!1;function initTreeView(){if(!allowTreeView)return;allowTreeView=!1;let e=getParameter("analysisUnit");const t=getTreedata(e);if(isundef(t))return;const n=$("#treeZone");let l='<ul class="list-group">';!function e(t,n){0!=t.length&&t.forEach(t=>{l+=generateTreeNode(n,0!=t.next.length,t.type,t.value),e(t.next,n+1)})}(t,0),l+="</ul>",n.html(""),n.append(l),initColorpicker()}function generateTreeNode(e,t,n,l){let a=`<li class="list-group-item" \n        data-floor="${e}" \n        data-type="${n}"\n        data-value="${l}" >`;function o(e,t,n,l=!0){return`<span class="pull-right ${e} ${l?"":"unactive"}\n            glyphicon ${t}" title="${n}"></span>`}return a+='<span class="indent"></span>'.repeat(e),t&&(a+='<span class="toggle-target glyphicon glyphicon-minus"></span>'),a+=`${n} ${l}`,t&&(a+='<span class="pull-right">\n        <input class="hidden colorpicker-container" /></span>'),a+=o("center",glyDict.no_center,"显示质心",!1),0==e?a+=o("mean",glyDict.mean,"显示平均质心"):1==e&&(a+=o("mean",glyDict.no_mean,"显示平均质心",!1)),a+=o("net",glyDict.no_net,"显示网络图",!1),a+="</li>"}function initColorpicker(){const e=$(".colorpicker-container");e.colorpicker(),e.parent().addClass("colorpicker-wrapper"),e.next().data("color",""),e.next().attr("title","当前选择颜色为：<无>")}const initTreeHandlers=function(){const e=$("#treeZone");function t(){const t="glyphicon-minus",n="glyphicon-plus";delegate(e,[{target:".toggle-target",event:"click",handler:function(){const e=$(this),l=e.parent(),a=e.hasClass(t),o=+l.data("floor");a?function e(l,a){const o=l.find("span.toggle-target");if(!o.length)return;let r=l;for(;r.next().length&&+r.next().data("floor")>a;){let t=+(r=r.next()).data("floor");t==a+1&&(e(r,t),hide(r))}o.removeClass(t).addClass(n)}(l,o):function e(l,a){const o=l.find("span.toggle-target");if(!o.length)return;let r=l;for(;r.next().length&&+r.next().data("floor")>a;){let t=+(r=r.next()).data("floor");t==a+1&&(e(r,t),show(r))}o.removeClass(n).addClass(t)}(l,o)}}])}function n(){function t(t){return function(){const n=$(this);if(n.hasClass("unactive")){if("net"===t&&!function(){let t=e.find(".net:not(.unactive)").length<2;t||alert("最多只能选中两个对象绘制网络图！");return t}())return;n.removeClass(glyDict[`no_${t}`]).addClass(glyDict[t]),n.removeClass("unactive")}else n.addClass(glyDict[`no_${t}`]).removeClass(glyDict[t]),n.addClass("unactive")}}delegate(e,[{target:".net",event:"click",handler:t("net")},{target:".mean",event:"click",handler:t("mean")},{target:".center",event:"click",handler:function(){const e=$(this).closest("li"),t=+e.data("floor"),n=e.find(".center").hasClass(glyDict.no_center);let l=e;do{n?l.find(".center").removeClass(glyDict.no_center).removeClass("unactive").addClass(glyDict.center):l.find(".center").addClass(glyDict.no_center).addClass("unactive").removeClass(glyDict.center),l=l.next()}while(l.length&&+l.data("floor")>t)}}])}function l(){delegate(e,[{target:".colorpicker-container",event:"change.color",handler:function(e,t){if(isundef(t))return;const n=$(this).next();let l=n.attr("title");l=l.replace(/<(.*)>/u,`<${t}>`),n.attr("title",l),n.data("color",t)}}])}function a(){$("#resetTreeview").click(()=>(allowTreeView=!0,initTreeView(),!1))}return function(){multistep([t,n,l,a])}}();initTreeHandlers();